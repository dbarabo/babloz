buildscript {
    ext.kotlin_version = '1.2.30'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'ru.barabo'
//version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


compileJava.options.encoding = 'UTF-8'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'

    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.+'

    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.21.0'

    compile group: 'no.tornado', name: 'tornadofx', version: '1.7.12'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'ru.barabo.babloz.main.BablozKt'
    }

    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

    from configurations.compile.collect {
        it.isDirectory() ? it : zipTree(it).matching{exclude{
            it.name.contains('.DSA') || it.name.contains('.SF') || it.name.contains('.RSA') ||
                    it.name.contains('.jnilib') || it.name.contains('.so') }}
    }
}